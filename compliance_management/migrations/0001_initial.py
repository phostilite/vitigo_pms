# Generated by Django 5.1.2 on 2025-01-07 18:43

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('actual_date', models.DateField(blank=True, null=True)),
                ('actual_time', models.TimeField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=15)),
                ('priority', models.CharField(choices=[('A', 'Blue A - High Priority'), ('B', 'Green B - Medium Priority'), ('C', 'Red C - Low Priority')], default='B', max_length=1)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('MISSED', 'Missed'), ('RESCHEDULED', 'Rescheduled'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20)),
                ('schedule_notes', models.TextField(blank=True)),
                ('outcome', models.TextField(blank=True)),
                ('next_follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_compliance_schedules', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(limit_choices_to={'role__name': 'PATIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_schedules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['scheduled_date', 'scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_type', models.CharField(choices=[('GENERAL', 'General Note'), ('FOLLOW_UP', 'Follow-up Note'), ('CONCERN', 'Compliance Concern'), ('RESOLUTION', 'Issue Resolution')], max_length=20)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_private', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compliance_notes', to=settings.AUTH_USER_MODEL)),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='compliance_management.complianceschedule')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PatientGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('criteria', models.JSONField(help_text='Criteria used for grouping patients')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_patient_groups', to=settings.AUTH_USER_MODEL)),
                ('patients', models.ManyToManyField(limit_choices_to={'role__name': 'PATIENT'}, related_name='compliance_groups', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('MISSED_APPOINTMENT', 'Missed Appointment'), ('LOW_COMPLIANCE', 'Low Compliance Score'), ('MISSED_MEDICATION', 'Missed Medication'), ('FOLLOW_UP_NEEDED', 'Follow-up Required'), ('CRITICAL_ISSUE', 'Critical Issue')], max_length=20)),
                ('severity', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], max_length=10)),
                ('message', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(limit_choices_to={'role__name': 'PATIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_alerts', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_compliance_alerts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['patient', 'alert_type', 'is_resolved'], name='compliance__patient_dcbe36_idx'), models.Index(fields=['severity', 'is_resolved'], name='compliance__severit_df616f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('HIGH', 'High'), ('MEDIUM', 'Medium'), ('LOW', 'Low')], max_length=10)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('RESOLVED', 'Resolved'), ('CLOSED', 'Closed')], default='OPEN', max_length=20)),
                ('resolution', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_compliance_issues', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(limit_choices_to={'role__name': 'PATIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_issues', to=settings.AUTH_USER_MODEL)),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_compliance_issues', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['patient', 'status'], name='compliance__patient_d992f3_idx'), models.Index(fields=['severity', 'status'], name='compliance__severit_362ed7_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_type', models.CharField(choices=[('MEDICATION', 'Medication Adherence'), ('APPOINTMENT', 'Appointment Attendance'), ('PHOTOTHERAPY', 'Phototherapy Compliance'), ('FOLLOW_UP', 'Follow-up Compliance'), ('OVERALL', 'Overall Compliance')], max_length=20)),
                ('evaluation_date', models.DateField()),
                ('compliance_score', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('evaluation_period_start', models.DateField()),
                ('evaluation_period_end', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('evaluated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluated_compliance_metrics', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(limit_choices_to={'role__name': 'PATIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_metrics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['patient', 'metric_type', 'evaluation_date'], name='compliance__patient_b79928_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('MEDICATION', 'Medication Reminder'), ('APPOINTMENT', 'Appointment Reminder'), ('FOLLOW_UP', 'Follow-up Call Reminder'), ('PHOTOTHERAPY', 'Phototherapy Session Reminder'), ('GENERAL', 'General Reminder')], max_length=20)),
                ('scheduled_datetime', models.DateTimeField()),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_status', models.CharField(blank=True, max_length=20, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(limit_choices_to={'role__name': 'PATIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_reminders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['scheduled_datetime'],
                'indexes': [models.Index(fields=['patient', 'reminder_type', 'status'], name='compliance__patient_210d19_idx'), models.Index(fields=['scheduled_datetime', 'status'], name='compliance__schedul_98e5ac_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('INDIVIDUAL', 'Individual Patient Report'), ('GROUP', 'Patient Group Report'), ('SUMMARY', 'Summary Report'), ('TREND', 'Trend Analysis')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('parameters', models.JSONField(default=dict)),
                ('results', models.JSONField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('file_path', models.CharField(blank=True, max_length=255)),
                ('generated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_compliance_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-generated_at'],
                'indexes': [models.Index(fields=['report_type', 'generated_at'], name='compliance__report__cb4789_idx'), models.Index(fields=['period_start', 'period_end'], name='compliance__period__f3f48f_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='complianceschedule',
            index=models.Index(fields=['patient', 'status'], name='compliance__patient_8f19fe_idx'),
        ),
        migrations.AddIndex(
            model_name='complianceschedule',
            index=models.Index(fields=['scheduled_date', 'status'], name='compliance__schedul_1f413d_idx'),
        ),
        migrations.AddIndex(
            model_name='complianceschedule',
            index=models.Index(fields=['priority'], name='compliance__priorit_0a1fc2_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancenote',
            index=models.Index(fields=['schedule', 'note_type'], name='compliance__schedul_856027_idx'),
        ),
        migrations.AddIndex(
            model_name='compliancenote',
            index=models.Index(fields=['created_at'], name='compliance__created_ae5c37_idx'),
        ),
        migrations.AddIndex(
            model_name='patientgroup',
            index=models.Index(fields=['name', 'is_active'], name='compliance__name_b9d393_idx'),
        ),
    ]
