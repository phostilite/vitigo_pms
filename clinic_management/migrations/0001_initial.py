# Generated by Django 5.1.2 on 2024-12-17 05:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('access_control', '0001_initial'),
        ('appointment_management', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentTerminal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('terminal_id', models.CharField(max_length=50, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('terminal_type', models.CharField(choices=[('CARD', 'Card Machine'), ('UPI', 'UPI Terminal'), ('CASH', 'Cash Counter'), ('OTHER', 'Other')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_maintenance', models.DateField(null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VisitType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('default_duration', models.PositiveIntegerField(help_text='Default duration in minutes')),
                ('requires_doctor', models.BooleanField(default=True)),
                ('requires_appointment', models.BooleanField(default=True)),
                ('standard_procedures', models.TextField(blank=True, help_text='Standard procedures for this visit type')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClinicArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('capacity', models.PositiveIntegerField(help_text='Maximum number of patients that can be accommodated')),
                ('requires_doctor', models.BooleanField(default=False)),
                ('requires_appointment', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['code', 'is_active'], name='clinic_mana_code_889ce4_idx')],
            },
        ),
        migrations.CreateModel(
            name='ClinicDaySheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CLOSED', 'Closed')], default='PLANNED', max_length=20)),
                ('total_appointments', models.PositiveIntegerField(default=0)),
                ('total_walk_ins', models.PositiveIntegerField(default=0)),
                ('total_patients', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('closed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_daysheets', to=settings.AUTH_USER_MODEL)),
                ('opened_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='opened_daysheets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ClinicStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('station_number', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('current_status', models.CharField(choices=[('AVAILABLE', 'Available'), ('OCCUPIED', 'Occupied'), ('MAINTENANCE', 'Under Maintenance'), ('RESERVED', 'Reserved')], default='AVAILABLE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stations', to='clinic_management.clinicarea')),
            ],
            options={
                'ordering': ['area', 'station_number'],
                'unique_together': {('area', 'station_number')},
            },
        ),
        migrations.CreateModel(
            name='ClinicVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('A', 'Blue A - High Priority'), ('B', 'Green B - Medium Priority'), ('C', 'Red C - Low Priority')], default='B', max_length=1)),
                ('status', models.CharField(choices=[('REGISTERED', 'Registered'), ('WAITING', 'Waiting'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('NO_SHOW', 'No Show')], default='REGISTERED', max_length=20)),
                ('registration_time', models.DateTimeField(auto_now_add=True)),
                ('check_in_time', models.DateTimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('chief_complaint', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='appointment_management.appointment')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_visits', to=settings.AUTH_USER_MODEL)),
                ('current_area', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_visits', to='clinic_management.clinicarea')),
                ('current_station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_visits', to='clinic_management.clinicstation')),
                ('patient', models.ForeignKey(limit_choices_to={'role__name': 'PATIENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='clinic_visits', to=settings.AUTH_USER_MODEL)),
                ('visit_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='clinic_management.visittype')),
            ],
            options={
                'ordering': ['-registration_time'],
            },
        ),
        migrations.CreateModel(
            name='VisitChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('estimated_duration', models.PositiveIntegerField(help_text='Estimated duration in minutes', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('responsible_role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='access_control.role')),
                ('visit_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_items', to='clinic_management.visittype')),
            ],
            options={
                'ordering': ['visit_type', 'order'],
            },
        ),
        migrations.CreateModel(
            name='WaitingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('A', 'Blue A - High Priority'), ('B', 'Green B - Medium Priority'), ('C', 'Red C - Low Priority')], max_length=1)),
                ('join_time', models.DateTimeField(auto_now_add=True)),
                ('estimated_wait_time', models.PositiveIntegerField(help_text='Estimated wait time in minutes')),
                ('status', models.CharField(choices=[('WAITING', 'Waiting'), ('CALLED', 'Called'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='WAITING', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_list', to='clinic_management.clinicarea')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_management.clinicvisit')),
            ],
            options={
                'ordering': ['priority', 'join_time'],
            },
        ),
        migrations.CreateModel(
            name='ClinicMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_patients', models.PositiveIntegerField(default=0)),
                ('avg_wait_time', models.FloatField(help_text='Average wait time in minutes')),
                ('max_wait_time', models.FloatField(help_text='Maximum wait time in minutes')),
                ('total_no_shows', models.PositiveIntegerField(default=0)),
                ('capacity_utilization', models.FloatField(help_text='Capacity utilization percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_management.clinicarea')),
            ],
            options={
                'ordering': ['-date', 'area'],
                'indexes': [models.Index(fields=['date', 'area'], name='clinic_mana_date_517dbc_idx')],
                'unique_together': {('date', 'area')},
            },
        ),
        migrations.CreateModel(
            name='ClinicNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('priority', models.CharField(choices=[('HIGH', 'High Priority'), ('MEDIUM', 'Medium Priority'), ('LOW', 'Low Priority')], default='MEDIUM', max_length=10)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('READ', 'Read'), ('ACTIONED', 'Actioned')], default='PENDING', max_length=20)),
                ('send_at', models.DateTimeField()),
                ('expires_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_clinic_notifications', to=settings.AUTH_USER_MODEL)),
                ('recipient_roles', models.ManyToManyField(related_name='clinic_notifications', to='access_control.role')),
                ('recipient_users', models.ManyToManyField(blank=True, related_name='clinic_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-send_at'],
                'indexes': [models.Index(fields=['status', 'priority'], name='clinic_mana_status_f9b764_idx'), models.Index(fields=['send_at'], name='clinic_mana_send_at_02922a_idx')],
            },
        ),
        migrations.CreateModel(
            name='ClinicFlow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_time', models.DateTimeField()),
                ('exit_time', models.DateTimeField(null=True)),
                ('status', models.CharField(choices=[('WAITING', 'Waiting'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('SKIPPED', 'Skipped')], default='WAITING', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_management.clinicarea')),
                ('handled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_flows', to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic_management.clinicstation')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_records', to='clinic_management.clinicvisit')),
            ],
            options={
                'ordering': ['visit', 'entry_time'],
                'indexes': [models.Index(fields=['visit', 'area'], name='clinic_mana_visit_i_b59e36_idx'), models.Index(fields=['entry_time'], name='clinic_mana_entry_t_469e4f_idx')],
            },
        ),
        migrations.CreateModel(
            name='ResourceAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resource_type', models.CharField(choices=[('ROOM', 'Treatment Room'), ('EQUIPMENT', 'Medical Equipment'), ('STAFF', 'Staff Member'), ('OTHER', 'Other Resource')], max_length=20)),
                ('resource_id', models.CharField(max_length=50)),
                ('allocated_at', models.DateTimeField(auto_now_add=True)),
                ('released_at', models.DateTimeField(null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('allocated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resource_allocations', to=settings.AUTH_USER_MODEL)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_allocations', to='clinic_management.clinicvisit')),
            ],
            options={
                'ordering': ['-allocated_at'],
                'indexes': [models.Index(fields=['visit', 'resource_type'], name='clinic_mana_visit_i_662eda_idx'), models.Index(fields=['resource_id'], name='clinic_mana_resourc_6aa0f7_idx')],
            },
        ),
        migrations.CreateModel(
            name='StaffAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_primary', models.BooleanField(default=False, help_text='Whether this is the primary assignment for the staff member')),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_management.clinicarea')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clinic_assignments', to=settings.AUTH_USER_MODEL)),
                ('station', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic_management.clinicstation')),
            ],
            options={
                'ordering': ['date', 'start_time'],
                'indexes': [models.Index(fields=['staff', 'date'], name='clinic_mana_staff_i_0ef083_idx'), models.Index(fields=['area', 'date'], name='clinic_mana_area_id_92ae59_idx')],
            },
        ),
        migrations.CreateModel(
            name='VisitChecklistCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('SKIPPED', 'Skipped')], default='PENDING', max_length=20)),
                ('completed_at', models.DateTimeField(null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('checklist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clinic_management.visitchecklist')),
                ('completed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_checklist_items', to=settings.AUTH_USER_MODEL)),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklist_completions', to='clinic_management.clinicvisit')),
            ],
            options={
                'ordering': ['checklist_item__order'],
                'unique_together': {('visit', 'checklist_item')},
            },
        ),
        migrations.CreateModel(
            name='VisitPaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Card'), ('UPI', 'UPI'), ('OTHER', 'Other')], max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('notes', models.TextField(blank=True)),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_transactions', to=settings.AUTH_USER_MODEL)),
                ('terminal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='clinic_management.paymentterminal')),
                ('visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_transactions', to='clinic_management.clinicvisit')),
            ],
            options={
                'ordering': ['-processed_at'],
                'indexes': [models.Index(fields=['visit', 'status'], name='clinic_mana_visit_i_1ab78c_idx'), models.Index(fields=['receipt_number'], name='clinic_mana_receipt_0f7c96_idx')],
            },
        ),
        migrations.CreateModel(
            name='OperationalAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('alert_type', models.CharField(choices=[('CAPACITY', 'Capacity Alert'), ('WAIT_TIME', 'Wait Time Alert'), ('RESOURCE', 'Resource Alert'), ('EMERGENCY', 'Emergency Alert'), ('OTHER', 'Other Alert')], max_length=20)),
                ('priority', models.CharField(choices=[('HIGH', 'High Priority'), ('MEDIUM', 'Medium Priority'), ('LOW', 'Low Priority')], default='MEDIUM', max_length=10)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('ACKNOWLEDGED', 'Acknowledged'), ('RESOLVED', 'Resolved'), ('DISMISSED', 'Dismissed')], default='ACTIVE', max_length=20)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic_management.clinicarea')),
                ('resolved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('affected_services', models.ManyToManyField(blank=True, to='clinic_management.visittype')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'priority'], name='clinic_mana_status_7e6ba0_idx'), models.Index(fields=['alert_type'], name='clinic_mana_alert_t_29c735_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='clinicvisit',
            index=models.Index(fields=['status', 'priority'], name='clinic_mana_status_2e31ba_idx'),
        ),
        migrations.AddIndex(
            model_name='clinicvisit',
            index=models.Index(fields=['patient', 'registration_time'], name='clinic_mana_patient_2dba49_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglist',
            index=models.Index(fields=['area', 'status'], name='clinic_mana_area_id_b48f25_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglist',
            index=models.Index(fields=['priority', 'join_time'], name='clinic_mana_priorit_9c9838_idx'),
        ),
    ]
