# Generated by Django 5.1.2 on 2025-01-14 14:03

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceMaintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(choices=[('ROUTINE', 'Routine Maintenance'), ('REPAIR', 'Repair'), ('CALIBRATION', 'Calibration'), ('INSPECTION', 'Safety Inspection'), ('OTHER', 'Other')], max_length=20)),
                ('maintenance_date', models.DateField()),
                ('performed_by', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('next_maintenance_due', models.DateField(null=True)),
                ('parts_replaced', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-maintenance_date'],
            },
        ),
        migrations.CreateModel(
            name='HomePhototherapyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField()),
                ('exposure_type', models.CharField(choices=[('UVB_DEVICE', 'UVB Device'), ('SUNLIGHT', 'Natural Sunlight'), ('COMBINATION', 'Combined Treatment')], default='UVB_DEVICE', max_length=20)),
                ('body_areas_treated', models.TextField()),
                ('notes', models.TextField(blank=True)),
                ('side_effects', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-date', '-time'],
            },
        ),
        migrations.CreateModel(
            name='PatientRFIDCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_date', models.DateTimeField(auto_now_add=True)),
                ('last_used', models.DateTimeField(null=True)),
                ('expires_at', models.DateTimeField()),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Patient RFID Card',
                'verbose_name_plural': 'Patient RFID Cards',
            },
        ),
        migrations.CreateModel(
            name='PhototherapyCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('operating_hours', models.TextField(help_text="Describe the center's operating hours")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PhototherapyDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_number', models.CharField(max_length=100)),
                ('serial_number', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(max_length=100)),
                ('installation_date', models.DateField()),
                ('last_maintenance_date', models.DateField(null=True)),
                ('next_maintenance_date', models.DateField(null=True)),
                ('maintenance_notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhototherapyPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('number_of_sessions', models.PositiveIntegerField()),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_featured', models.BooleanField(default=False, help_text='Featured packages are shown first in the list')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_featured', 'number_of_sessions'],
            },
        ),
        migrations.CreateModel(
            name='PhototherapyPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_type', models.CharField(choices=[('FULL', 'Full Payment'), ('PER_SESSION', 'Per Session Payment'), ('PARTIAL', 'Partial Payment')], default='FULL', help_text='Whether this is a full payment or per-session payment', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_date', models.DateTimeField()),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Card'), ('UPI', 'UPI'), ('BANK_TRANSFER', 'Bank Transfer'), ('OTHER', 'Other')], max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REFUNDED', 'Refunded')], default='PENDING', max_length=20)),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('notes', models.TextField(blank=True)),
                ('is_installment', models.BooleanField(default=False, help_text='Whether this payment is part of an installment plan')),
                ('installment_number', models.PositiveIntegerField(blank=True, help_text='Installment number if part of a payment plan', null=True)),
                ('total_installments', models.PositiveIntegerField(blank=True, help_text='Total number of installments planned', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PhototherapyPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(null=True)),
                ('current_dose', models.FloatField()),
                ('total_sessions_planned', models.PositiveIntegerField()),
                ('sessions_completed', models.PositiveIntegerField(default=0)),
                ('billing_status', models.CharField(choices=[('PENDING', 'Payment Pending'), ('PARTIAL', 'Partially Paid'), ('PAID', 'Fully Paid'), ('OVERDUE', 'Payment Overdue')], default='PENDING', max_length=20)),
                ('total_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('special_instructions', models.TextField(blank=True)),
                ('doctor_notes', models.TextField(blank=True)),
                ('staff_notes', models.TextField(blank=True)),
                ('reminder_frequency', models.IntegerField(default=1, help_text='Reminder frequency in days')),
                ('last_reminder_sent', models.DateTimeField(null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhototherapyProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assessment_date', models.DateField()),
                ('response_level', models.CharField(choices=[('EXCELLENT', 'Excellent Response'), ('GOOD', 'Good Response'), ('MODERATE', 'Moderate Response'), ('POOR', 'Poor Response'), ('NO_RESPONSE', 'No Response')], max_length=20)),
                ('improvement_percentage', models.FloatField(help_text='Estimated improvement in percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('notes', models.TextField(blank=True)),
                ('side_effects_noted', models.TextField(blank=True)),
                ('next_assessment_date', models.DateField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-assessment_date'],
            },
        ),
        migrations.CreateModel(
            name='PhototherapyProtocol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('initial_dose', models.FloatField(help_text='Initial dose in mJ/cm²')),
                ('max_dose', models.FloatField(help_text='Maximum dose in mJ/cm²')),
                ('increment_percentage', models.FloatField(help_text='Percentage to increase dose each session', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('frequency_per_week', models.PositiveIntegerField(help_text='Number of sessions per week')),
                ('duration_weeks', models.PositiveIntegerField(help_text='Total duration in weeks')),
                ('contraindications', models.TextField(blank=True)),
                ('safety_guidelines', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhototherapyReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('SESSION', 'Session Reminder'), ('PAYMENT', 'Payment Reminder'), ('FOLLOWUP', 'Follow-up Reminder'), ('MAINTENANCE', 'Device Maintenance')], max_length=20)),
                ('scheduled_datetime', models.DateTimeField()),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('sent_at', models.DateTimeField(null=True)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['scheduled_datetime'],
            },
        ),
        migrations.CreateModel(
            name='PhototherapySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_number', models.PositiveIntegerField()),
                ('scheduled_date', models.DateField()),
                ('scheduled_time', models.TimeField()),
                ('actual_date', models.DateField(null=True)),
                ('planned_dose', models.FloatField()),
                ('actual_dose', models.FloatField(null=True)),
                ('duration_seconds', models.PositiveIntegerField(null=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('COMPLETED', 'Completed'), ('MISSED', 'Missed'), ('RESCHEDULED', 'Rescheduled'), ('CANCELLED', 'Cancelled')], default='SCHEDULED', max_length=20)),
                ('problem_severity', models.CharField(choices=[('NONE', 'No Problems'), ('MILD', 'Mild Issues'), ('MODERATE', 'Moderate Issues'), ('SEVERE', 'Severe Issues')], default='NONE', max_length=20)),
                ('side_effects', models.TextField(blank=True)),
                ('problems_reported', models.TextField(blank=True)),
                ('staff_notes', models.TextField(blank=True)),
                ('remarks', models.TextField(blank=True, help_text='Additional remarks or comments about the session')),
                ('rfid_entry_time', models.DateTimeField(null=True)),
                ('rfid_exit_time', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['scheduled_date', 'scheduled_time'],
            },
        ),
        migrations.CreateModel(
            name='PhototherapyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('therapy_type', models.CharField(choices=[('WB_NB', 'Wholebody NB'), ('EXCIMER', 'Excimer (TP)'), ('HOME_NB', 'Home Based NB'), ('SUN_EXP', 'Sun Exposure'), ('OTHER', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('A', 'Blue A - High Priority'), ('B', 'Green B - Medium Priority'), ('C', 'Red C - Low Priority')], default='B', max_length=1)),
                ('requires_rfid', models.BooleanField(default=False, help_text='Whether this therapy type requires RFID access')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Phototherapy Type',
                'verbose_name_plural': 'Phototherapy Types',
            },
        ),
        migrations.CreateModel(
            name='ProblemReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_description', models.TextField()),
                ('severity', models.CharField(choices=[('NONE', 'No Problems'), ('MILD', 'Mild Issues'), ('MODERATE', 'Moderate Issues'), ('SEVERE', 'Severe Issues')], max_length=20)),
                ('action_taken', models.TextField(blank=True)),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True)),
                ('resolved_at', models.DateTimeField(null=True)),
            ],
            options={
                'ordering': ['-reported_at'],
            },
        ),
    ]
