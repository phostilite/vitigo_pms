# Generated by Django 5.1.2 on 2025-01-04 08:21

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField(blank=True)),
                ('depreciation_rate', models.DecimalField(decimal_places=2, help_text='Annual depreciation rate in percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('expected_lifetime_years', models.PositiveIntegerField(default=5, help_text='Expected useful life of assets in this category')),
                ('maintenance_frequency_days', models.PositiveIntegerField(default=365, help_text='Recommended days between maintenance checks')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Asset Category',
                'verbose_name_plural': 'Asset Categories',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['code'], name='asset_manag_code_78101a_idx')],
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('asset_id', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('model_number', models.CharField(blank=True, max_length=100)),
                ('serial_number', models.CharField(blank=True, max_length=100)),
                ('manufacturer', models.CharField(max_length=100)),
                ('purchase_date', models.DateField()),
                ('purchase_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('warranty_expiry', models.DateField(blank=True, null=True)),
                ('vendor', models.CharField(max_length=100)),
                ('vendor_contact', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(choices=[('AVAILABLE', 'Available'), ('IN_USE', 'In Use'), ('UNDER_MAINTENANCE', 'Under Maintenance'), ('DAMAGED', 'Damaged'), ('RETIRED', 'Retired'), ('DISPOSED', 'Disposed')], default='AVAILABLE', max_length=20)),
                ('condition', models.CharField(choices=[('EXCELLENT', 'Excellent'), ('GOOD', 'Good'), ('FAIR', 'Fair'), ('POOR', 'Poor'), ('DAMAGED', 'Damaged')], default='EXCELLENT', max_length=20)),
                ('location', models.CharField(max_length=100)),
                ('specifications', models.JSONField(default=dict, help_text='Technical specifications as JSON')),
                ('power_rating', models.CharField(blank=True, max_length=50)),
                ('dimensions', models.CharField(blank=True, max_length=50)),
                ('weight', models.CharField(blank=True, max_length=50)),
                ('user_manual', models.FileField(blank=True, null=True, upload_to='asset_documents/manuals/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('certificate', models.FileField(blank=True, null=True, upload_to='asset_documents/certificates/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])])),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='assets', to='asset_management.assetcategory')),
            ],
            options={
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AssetDepreciation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('current_value', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('depreciation_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('fiscal_year', models.CharField(max_length=10)),
                ('notes', models.TextField(blank=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depreciation_records', to='asset_management.asset')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='InsurancePolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('policy_number', models.CharField(max_length=100, unique=True)),
                ('provider', models.CharField(max_length=100)),
                ('coverage_type', models.CharField(max_length=100)),
                ('coverage_amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('deductible', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('documents', models.JSONField(default=list, help_text='List of insurance document references')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('EXPIRED', 'Expired'), ('CANCELLED', 'Cancelled'), ('RENEWED', 'Renewed')], default='ACTIVE', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurance_policies', to='asset_management.asset')),
            ],
            options={
                'verbose_name': 'Insurance Policy',
                'verbose_name_plural': 'Insurance Policies',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_type', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('scheduled_date', models.DateField()),
                ('priority', models.CharField(choices=[('HIGH', 'High Priority'), ('MEDIUM', 'Medium Priority'), ('LOW', 'Low Priority')], default='MEDIUM', max_length=10)),
                ('estimated_duration_hours', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled'), ('OVERDUE', 'Overdue')], default='SCHEDULED', max_length=20)),
                ('cost_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('vendor', models.CharField(blank=True, max_length=100)),
                ('completion_notes', models.TextField(blank=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_schedules', to='asset_management.asset')),
            ],
            options={
                'ordering': ['scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='AssetAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_date', models.DateField()),
                ('location_verified', models.BooleanField(default=False)),
                ('condition_verified', models.BooleanField(default=False)),
                ('discrepancies', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PLANNED', 'Planned'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='PLANNED', max_length=20)),
                ('conducted_by', models.CharField(max_length=100)),
                ('verified_by', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('photos', models.JSONField(default=list, help_text='List of photo URLs or references')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audits', to='asset_management.asset')),
            ],
            options={
                'ordering': ['-audit_date'],
                'indexes': [models.Index(fields=['asset', 'audit_date'], name='asset_manag_asset_i_02eda3_idx'), models.Index(fields=['status'], name='asset_manag_status_c5f0b1_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['asset_id'], name='asset_manag_asset_i_0aa18e_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['status'], name='asset_manag_status_ca4e8f_idx'),
        ),
        migrations.AddIndex(
            model_name='asset',
            index=models.Index(fields=['category', 'status'], name='asset_manag_categor_4c1ff9_idx'),
        ),
        migrations.AddIndex(
            model_name='assetdepreciation',
            index=models.Index(fields=['asset', 'fiscal_year'], name='asset_manag_asset_i_0a5508_idx'),
        ),
        migrations.AddIndex(
            model_name='assetdepreciation',
            index=models.Index(fields=['date'], name='asset_manag_date_ab0e3e_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['policy_number'], name='asset_manag_policy__04b39a_idx'),
        ),
        migrations.AddIndex(
            model_name='insurancepolicy',
            index=models.Index(fields=['asset', 'status'], name='asset_manag_asset_i_036422_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceschedule',
            index=models.Index(fields=['asset', 'scheduled_date'], name='asset_manag_asset_i_6d6efd_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenanceschedule',
            index=models.Index(fields=['status'], name='asset_manag_status_7629b3_idx'),
        ),
    ]
