# Generated by Django 5.1.2 on 2024-12-22 12:16

import django.core.validators
import django.db.models.deletion
import encrypted_model_fields.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('settings', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticsConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider', models.CharField(choices=[('GOOGLE_ANALYTICS', 'Google Analytics'), ('MIXPANEL', 'Mixpanel'), ('CUSTOM', 'Custom Analytics')], max_length=50)),
                ('tracking_id', models.CharField(max_length=100)),
                ('api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('additional_settings', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Analytics Configuration',
                'verbose_name_plural': 'Analytics Configurations',
            },
        ),
        migrations.CreateModel(
            name='APIConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('api_url', models.URLField()),
                ('version', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('auth_type', models.CharField(choices=[('API_KEY', 'API Key'), ('OAUTH2', 'OAuth 2.0'), ('JWT', 'JWT'), ('BASIC', 'Basic Auth')], max_length=20)),
                ('api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('client_id', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('client_secret', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('timeout_seconds', models.PositiveIntegerField(default=30)),
                ('retry_attempts', models.PositiveIntegerField(default=3)),
                ('rate_limit', models.JSONField(blank=True, default=dict)),
                ('custom_headers', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='AuthenticationProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider_type', models.CharField(choices=[('OAUTH2', 'OAuth 2.0'), ('SAML', 'SAML'), ('LDAP', 'LDAP'), ('ACTIVE_DIRECTORY', 'Active Directory'), ('CUSTOM', 'Custom Provider')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('client_id', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('client_secret', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('authorization_url', models.URLField(blank=True)),
                ('token_url', models.URLField(blank=True)),
                ('userinfo_url', models.URLField(blank=True)),
                ('scope', models.CharField(blank=True, max_length=200)),
                ('additional_settings', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Authentication Provider',
                'verbose_name_plural': 'Authentication Providers',
            },
        ),
        migrations.CreateModel(
            name='BackupConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('backup_provider', models.CharField(max_length=50)),
                ('schedule', models.JSONField()),
                ('retention_policy', models.JSONField()),
                ('encryption_key', encrypted_model_fields.fields.EncryptedCharField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CacheConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cache_type', models.CharField(max_length=20)),
                ('host', models.CharField(max_length=200)),
                ('port', models.PositiveIntegerField()),
                ('password', encrypted_model_fields.fields.EncryptedCharField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='CloudStorageProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider_type', models.CharField(choices=[('AWS_S3', 'Amazon S3'), ('GCS', 'Google Cloud Storage'), ('AZURE_BLOB', 'Azure Blob Storage'), ('DIGITAL_OCEAN', 'Digital Ocean Spaces'), ('CLOUDINARY', 'Cloudinary'), ('LOCAL', 'Local Storage')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('access_key', encrypted_model_fields.fields.EncryptedCharField()),
                ('secret_key', encrypted_model_fields.fields.EncryptedCharField()),
                ('bucket_name', models.CharField(max_length=100)),
                ('region', models.CharField(blank=True, max_length=50)),
                ('endpoint_url', models.URLField(blank=True)),
                ('base_url', models.URLField()),
                ('max_file_size', models.PositiveIntegerField()),
                ('allowed_file_types', models.JSONField(default=list)),
                ('custom_headers', models.JSONField(blank=True, default=dict)),
                ('cors_configuration', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='LoggingConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('log_level', models.CharField(max_length=20)),
                ('log_file_path', models.CharField(max_length=255)),
                ('rotation_policy', models.JSONField()),
                ('retention_days', models.PositiveIntegerField()),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='MonitoringConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider', models.CharField(choices=[('PROMETHEUS', 'Prometheus'), ('GRAFANA', 'Grafana'), ('DATADOG', 'Datadog'), ('NEW_RELIC', 'New Relic'), ('CUSTOM', 'Custom Solution')], max_length=50)),
                ('api_key', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('endpoint_url', models.URLField(blank=True)),
                ('metrics_config', models.JSONField(default=dict)),
                ('alert_config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Monitoring Configuration',
                'verbose_name_plural': 'Monitoring Configurations',
            },
        ),
        migrations.CreateModel(
            name='NotificationProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider_type', models.CharField(choices=[('FCM', 'Firebase Cloud Messaging'), ('APNS', 'Apple Push Notification Service'), ('ONESIGNAL', 'OneSignal'), ('CUSTOM', 'Custom Provider')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('api_key', encrypted_model_fields.fields.EncryptedCharField()),
                ('app_id', models.CharField(blank=True, max_length=200)),
                ('team_id', models.CharField(blank=True, max_length=200)),
                ('environment', models.CharField(choices=[('development', 'Development'), ('production', 'Production')], default='development', max_length=20)),
                ('certificate_path', models.CharField(blank=True, max_length=255)),
                ('supports_rich_media', models.BooleanField(default=False)),
                ('max_payload_size', models.PositiveIntegerField(default=4096)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('gateway_type', models.CharField(choices=[('RAZORPAY', 'Razorpay'), ('STRIPE', 'Stripe'), ('PAYPAL', 'PayPal'), ('PAYTM', 'Paytm'), ('PHONEPE', 'PhonePe'), ('UPI', 'UPI')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('api_key', encrypted_model_fields.fields.EncryptedCharField()),
                ('api_secret', encrypted_model_fields.fields.EncryptedCharField()),
                ('merchant_id', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('environment', models.CharField(choices=[('sandbox', 'Sandbox'), ('production', 'Production')], default='sandbox', max_length=20)),
                ('webhook_secret', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('webhook_url', models.URLField(blank=True)),
                ('supported_currencies', models.JSONField(default=list)),
                ('transaction_fee_percentage', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('settlement_period_days', models.PositiveIntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='SecurityConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password_policy', models.JSONField(default=dict, help_text='Password requirements and restrictions')),
                ('ip_whitelist', models.JSONField(default=list, help_text='List of allowed IP addresses')),
                ('max_session_duration', models.PositiveIntegerField(default=3600, help_text='Maximum session duration in seconds')),
                ('jwt_secret_key', encrypted_model_fields.fields.EncryptedCharField()),
                ('jwt_expiry_hours', models.PositiveIntegerField(default=24)),
                ('enable_rate_limiting', models.BooleanField(default=True)),
                ('rate_limit_config', models.JSONField(default=dict)),
                ('cors_allowed_origins', models.JSONField(default=list)),
                ('enable_audit_trail', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Security Configuration',
                'verbose_name_plural': 'Security Configurations',
            },
        ),
        migrations.CreateModel(
            name='SMSProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider_type', models.CharField(choices=[('TWILIO', 'Twilio'), ('MSG91', 'MSG91'), ('AWS_SNS', 'Amazon SNS'), ('KALEYRA', 'Kaleyra'), ('CUSTOM', 'Custom Provider')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('account_sid', encrypted_model_fields.fields.EncryptedCharField(blank=True)),
                ('auth_token', encrypted_model_fields.fields.EncryptedCharField()),
                ('sender_id', models.CharField(max_length=20)),
                ('api_endpoint', models.URLField(blank=True)),
                ('webhook_url', models.URLField(blank=True)),
                ('supports_unicode', models.BooleanField(default=True)),
                ('supports_delivery_reports', models.BooleanField(default=True)),
                ('max_message_length', models.PositiveIntegerField(default=160)),
                ('rate_limit', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SystemConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(max_length=100)),
                ('site_url', models.URLField()),
                ('admin_email', models.EmailField(max_length=254)),
                ('session_timeout_minutes', models.PositiveIntegerField(default=30)),
                ('password_expiry_days', models.PositiveIntegerField(default=90)),
                ('max_login_attempts', models.PositiveIntegerField(default=5)),
                ('require_2fa', models.BooleanField(default=False)),
                ('max_upload_size_mb', models.PositiveIntegerField(default=5)),
                ('allowed_file_extensions', models.JSONField(default=list)),
                ('default_timezone', models.CharField(default='UTC', max_length=50)),
                ('default_language', models.CharField(default='en-us', max_length=10)),
                ('date_format', models.CharField(default='YYYY-MM-DD', max_length=50)),
                ('time_format', models.CharField(default='HH:mm:ss', max_length=50)),
                ('business_hours', models.JSONField(default=dict)),
                ('holiday_calendar', models.JSONField(default=list)),
                ('appointment_duration_minutes', models.PositiveIntegerField(default=30)),
            ],
            options={
                'verbose_name': 'System Configuration',
                'verbose_name_plural': 'System Configurations',
            },
        ),
        migrations.AlterModelOptions(
            name='emailconfiguration',
            options={},
        ),
        migrations.RemoveField(
            model_name='emailconfiguration',
            name='created_at',
        ),
        migrations.RemoveField(
            model_name='emailconfiguration',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='emailconfiguration',
            name='updated_at',
        ),
        migrations.RemoveField(
            model_name='emailconfiguration',
            name='updated_by',
        ),
        migrations.AlterField(
            model_name='setting',
            name='encrypted_value',
            field=encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='settingdefinition',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='settings.settingcategory'),
        ),
        migrations.AlterField(
            model_name='settingdefinition',
            name='is_sensitive',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='settingdefinition',
            name='possible_values',
            field=models.JSONField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='settingdefinition',
            name='validation_regex',
            field=models.CharField(blank=True, max_length=500),
        ),
        migrations.DeleteModel(
            name='CredentialStore',
        ),
    ]
